---
alwaysApply: true
description: "Fallout 4 Previsbine Generation Tool - PowerShell Conversion Project"
---

# Fallout 4 Previsbine Generation Tool - PowerShell Conversion Project

## Project Context
This repository contains a PowerShell conversion project for a Fallout 4 modding tool. The original [GeneratePrevisibines.bat](mdc:GeneratePrevisibines.bat) (600+ lines) automates the generation of precombined meshes and visibility data (previsbines) using Creation Kit, xEdit, and Archive tools.

## Development Guidelines

### PowerShell Best Practices
- Replace batch CHOICE prompts with Read-Host or menu systems
- Convert ERRORLEVEL checks to try-catch blocks
- Use Test-Path instead of IF EXIST
- Implement proper parameter validation with ValidateSet attributes
- Support -WhatIf and -Confirm for safety
- **CRITICAL**: Avoid catching blind exceptions unless absolutely necessary

### Planned Module Structure
```
GeneratePrevisibines/
├── GeneratePrevisibines.psd1  # Module manifest
├── GeneratePrevisibines.psm1  # Main module
├── Public/
│   └── New-Previsbine.ps1     # Main cmdlet
├── Private/
│   ├── Get-ModToolPaths.ps1   # Registry/path detection
│   ├── Test-Prerequisites.ps1  # Validation functions
│   └── Write-LogMessage.ps1    # Logging functions
├── Classes/
│   └── PrevisbineConfig.ps1   # Configuration class
└── Tests/
    └── GeneratePrevisibines.Tests.ps1
```

### External Dependencies (Must Be Available)
- **xEdit64.exe/FO4Edit64.exe**: Script extender for Fallout 4 plugin manipulation
- **CreationKit.exe**: Bethesda's official modding tool
- **Archive2.exe/BSArch.exe**: Archive creation tools
- **CKPE (CreationKitPlatformExtended)**: Creation Kit enhancement

### Registry Access Patterns
The tool reads from Windows registry to locate Fallout 4 installation:
- `HKLM:\SOFTWARE\Wow6432Node\Bethesda Softworks\Fallout4`
- `HKCR\FO4Script\DefaultIcon`

### Error Handling Requirements
- Check for required tools before execution
- Validate directory states (empty/exists)
- Parse Creation Kit logs for specific error patterns
- Handle MO2 (Mod Organizer 2) file virtualization
- Use specific exception types rather than generic catch-all blocks

### Key Workflows
1. **Precombine Generation**: Uses Creation Kit to generate optimized mesh data
2. **Plugin Merging**: Uses xEdit scripts to merge ESP files
3. **Archive Creation**: Archive2.exe/BSArch.exe packages files into BA2 archives
4. **Previs Generation**: Creates visibility data for performance optimization

### Testing Requirements
- Must test with actual Fallout 4 installation
- Requires Creation Kit and xEdit tools
- Test all build modes: clean, filtered, xbox
- Verify MO2 compatibility
- Test error recovery scenarios

### Development Commands
```powershell
# Import module for testing
Import-Module ./GeneratePrevisibines.psd1 -Force

# Run Pester tests
Invoke-Pester ./Tests/

# Check script analysis
Invoke-ScriptAnalyzer -Path . -Recurse
```

## Reference Documentation
- [previsbine-ps-conversion-plan.md](mdc:previsbine-ps-conversion-plan.md) - Detailed conversion plan
- [installation-methods-analysis.md](mdc:installation-methods-analysis.md) - Installation analysis
