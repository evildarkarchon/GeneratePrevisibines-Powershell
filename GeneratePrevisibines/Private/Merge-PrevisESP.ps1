function Merge-PrevisESP {
    <#
    .SYNOPSIS
        Merges the Previs.esp file with the main plugin using xEdit
        
    .DESCRIPTION
        This function merges the Previs.esp file generated by Creation Kit with the main plugin
        using xEdit's Batch_FO4MergePrevisandCleanRefr.pas script.
        
    .PARAMETER PluginName
        The name of the plugin (with extension) to merge with
        
    .PARAMETER Config
        The PrevisbineConfig object containing tool paths and settings
        
    .EXAMPLE
        Merge-PrevisESP -PluginName "MyMod.esp" -Config $config
        
    .NOTES
        This function expects both the main plugin and Previs.esp to exist
    #>
    [CmdletBinding(SupportsShouldProcess)]
    param(
        [Parameter(Mandatory = $true)]
        [string]$PluginName,
        
        [Parameter(Mandatory = $true)]
        [PrevisbineConfig]$Config
    )
    
    begin {
        Write-LogMessage -Message "Starting Previs.esp merge for plugin: $PluginName" -Level 'Info' -LogPath $Config.LogPath
        Write-ProgressMessage -Activity "Merging Previs ESP" -Status "Preparing merge for $PluginName"
    }
    
    process {
        try {
            # Check if visibility files exist
            $visPath = Join-Path $Config.DataPath 'vis'
            if (-not (Test-Path $visPath)) {
                Write-LogMessage -Message "ERROR - No Visibility files found at: $visPath" -Level 'Error' -LogPath $Config.LogPath
                throw "No Visibility files Generated"
            }
            
            # Check if any UVD files exist
            $uvdFiles = Get-ChildItem -Path $visPath -Filter "*.uvd" -Recurse
            if ($uvdFiles.Count -eq 0) {
                Write-LogMessage -Message "ERROR - No UVD files found in visibility directory: $visPath" -Level 'Error' -LogPath $Config.LogPath
                throw "No Visibility files Generated"
            }
            
            # Check if Previs.esp exists
            $previsEsp = Join-Path $Config.DataPath 'Previs.esp'
            if (-not (Test-Path $previsEsp)) {
                Write-LogMessage -Message "ERROR - No Previs.esp Generated at: $previsEsp" -Level 'Error' -LogPath $Config.LogPath
                throw "No Previs.esp Generated"
            }
            
            Write-LogMessage -Message "7 - Merging Previs.esp Via xEdit" -Level 'Info' -LogPath $Config.LogPath
            Write-ProgressMessage -Activity "Merging Previs ESP" -Status "Running xEdit merge script"
            
            # Run xEdit script to merge Previs.esp
            $scriptName = 'Batch_FO4MergePrevisandCleanRefr.pas'
            $scriptArgs = @($PluginName, 'Previs.esp')
            
            if ($PSCmdlet.ShouldProcess($previsEsp, "Merge with $PluginName")) {
                Invoke-xEditScript -ScriptName $scriptName -Arguments $scriptArgs -Config $Config
                
                # Check if merge was successful
                $logFile = $Config.UnattenedLogfile
                if (Test-Path $logFile) {
                    $logContent = Get-Content $logFile -Raw
                    if ($logContent -match "Completed: No Errors\.") {
                        Write-LogMessage -Message "Successfully merged Previs.esp with $PluginName" -Level 'Info' -LogPath $Config.LogPath
                        Write-ProgressMessage -Activity "Merging Previs ESP" -Status "Merge completed successfully"
                    } else {
                        Write-LogMessage -Message "WARNING - Merge Previs had errors. Check log: $logFile" -Level 'Warning' -LogPath $Config.LogPath
                    }
                } else {
                    Write-LogMessage -Message "WARNING - Could not find xEdit log file to verify merge: $logFile" -Level 'Warning' -LogPath $Config.LogPath
                }
            }
        }
        catch {
            Write-LogMessage -Message "ERROR during Previs.esp merge: $($_.Exception.Message)" -Level 'Error' -LogPath $Config.LogPath
            throw
        }
    }
    
    end {
        Write-LogMessage -Message "Completed Previs.esp merge for plugin: $PluginName" -Level 'Info' -LogPath $Config.LogPath
    }
}
